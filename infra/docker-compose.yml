services:
  api:
    build: ../backend
    env_file: ../backend/.env
    environment:
      # Use host Postgres (restored on the host) via host.docker.internal
      DATABASE_URL: "postgresql+psycopg2://${DB_USER:-ccb}:${DB_PASSWORD}@host.docker.internal:5433/${DB_NAME:-ccb}"
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-changeme}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
    restart: unless-stopped

  web:
    build:
      context: ../frontend/app
      args:
        # Browser clients need a public/host URL (api:8000 resolves only inside docker network).
        # Set to the server's public IP so the built JS calls the reachable API endpoint.
        VITE_API_BASE_URL: http://162.220.11.4:8000
    ports:
      - "8080:80"
    environment:
      VITE_API_BASE_URL: http://162.220.11.4:8000
    # Serve static build via nginx. Do NOT mount source to avoid overriding built files.
    restart: unless-stopped

  api-test:
    build: ../backend
    env_file: ../backend/.env
    environment:
      DATABASE_URL: "postgresql+psycopg2://${DB_USER:-ccb}:${DB_PASSWORD}@host.docker.internal:5433/${DB_NAME:-ccb}"
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-changeme}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    working_dir: /app
    command: sh -lc "pytest -q"
    volumes:
      - ../backend:/app
